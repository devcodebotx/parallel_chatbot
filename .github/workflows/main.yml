name: Deploy FastAPI to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  COLLECTION_NAME: ${{ secrets.COLLECTION_NAME }}
  GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
  QDRANT_API_KEY: ${{ secrets.QDRANT_API_KEY }}
  QDRANT_URL: ${{ secrets.QDRANT_URL }}
  OCR_GOOGLE_API_KEY: ${{ secrets.OCR_GOOGLE_API_KEY }}
  PROJECT_ID: ${{ secrets.PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:

      - name: Setup Google credentials
        run: |
          echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" > $HOME/gen-lang-client-0193241993-30b3ec141e50.json
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/gen-lang-client-0193241993-30b3ec141e50.json

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: |
          pytest tests/ || echo "Tests failed but continuing deployment"

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.VPS_PRIVATE_KEY }}

      - name: Deploy to VPS & Restart Service
        run: |
          ssh -o StrictHostKeyChecking=no \
              -p ${{ secrets.VPS_PORT }} \
              ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }} "
            
            echo 'üîÑ Pulling latest code and updating environment variables...'

            # Navigate to project directory
            cd /var/www/parallel/backend

            # Pull latest code
            git pull origin main

            # Update the .env file with latest secrets
            echo 'COLLECTION_NAME=${{ secrets.COLLECTION_NAME }}' > .env
            echo 'GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}' >> .env
            echo 'QDRANT_API_KEY=${{ secrets.QDRANT_API_KEY }}' >> .env
            echo 'QDRANT_URL=${{ secrets.QDRANT_URL }}' >> .env
            echo 'OCR_GOOGLE_API_KEY=${{ secrets.OCR_GOOGLE_API_KEY }}' >> .env
            echo 'PROJECT_ID=${{ secrets.PROJECT_ID }}' >> .env


            # Activate virtual environment and install dependencies
            source parallel/bin/activate
            pip install -r requirements.txt

            # Reload and restart the FastAPI service
            echo '‚ôªÔ∏è Restarting FastAPI service...'
            sudo systemctl daemon-reload
            sudo systemctl restart fastapi-backend

            # Check service status
            echo '‚úÖ Deployment complete. Checking service status:'
            sudo systemctl status fastapi-backend --no-pager
          "
